{"version":3,"file":"static/js/806.497fcc15.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","components/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  flex-wrap: wrap;\n  margin-top: 40px;\n  list-style: none;\n  color: white;\n`;\n\nexport const ReviewAutor = styled.h2`\n  color: rgba(0, 255, 255, 0.7);\n`;\n\nexport const Message = styled.p`\n  font-size: 24px;\n`;\n","import { fetchReviews } from 'components/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { List, Message, ReviewAutor } from './Reviews.styled';\nimport Notiflix from 'notiflix';\n\nexport const Reviews = () => {\n  const params = useParams();\n  const [reviewsInfo, setReviewsInfo] = useState([]);\n\n  useEffect(() => {\n    if (!params.movieId) {\n      return;\n    }\n    async function getReviews() {\n      try {\n        setReviewsInfo(await fetchReviews(params.movieId));\n      } catch (error) {\n        Notiflix.Notify.failure('Please reload the page');\n        console.log(error);\n      }\n    }\n    getReviews();\n  }, [params.movieId]);\n\n  return (\n    <List>\n      {reviewsInfo.length === 0 && (\n        <Message>This movie does not have any reviews yet.</Message>\n      )}\n      {reviewsInfo &&\n        reviewsInfo.map(review => (\n          <li key={review.id}>\n            <ReviewAutor>Author:{review.author}</ReviewAutor>\n            <div>{review.content}</div>\n          </li>\n        ))}\n    </List>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst params = new URLSearchParams({\n  api_key: '6bcb4df6f6ccae49c8637c73c0f829b9',\n  language: 'en-US',\n});\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?${params}`);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?${params}`);\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits?${params}`);\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews?${params}`);\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(`/search/movie?query=${query}&${params}`);\n  return response.data.results;\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ReviewAutor","_templateObject2","Message","_templateObject3","Reviews","params","useParams","_useState","useState","_useState2","_slicedToArray","reviewsInfo","setReviewsInfo","useEffect","_getReviews","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","t0","fetchReviews","movieId","t1","sent","t2","Notiflix","console","log","stop","apply","arguments","getReviews","_jsxs","children","length","_jsx","map","review","author","content","id","axios","URLSearchParams","api_key","language","fetchTrendingMovies","_ref","response","concat","abrupt","data","results","fetchMovieById","_ref2","_callee2","_context2","_x","fetchCast","_ref3","_callee3","_context3","cast","_x2","_ref4","_callee4","_context4","_x3","fetchSearchMovies","_ref5","_callee5","query","_context5","_x4"],"sourceRoot":""}