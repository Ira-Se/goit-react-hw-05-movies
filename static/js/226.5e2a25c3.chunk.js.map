{"version":3,"file":"static/js/226.5e2a25c3.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.js","components/MovieList/MovieList.styled.js","components/api.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.js","components/NotFound/NotFoundMovies.js","pages/MoviesPage.js"],"sourcesContent":["import { useLocation } from 'react-router-dom';\nimport {\n  List,\n  MovieItem,\n  MovieTitle,\n  Poster,\n  StyledLink,\n} from './MovieList.styled';\n\nexport const MovieList = ({ currentList }) => {\n  const location = useLocation();\n\n  const defaultPoster =\n    'https://ih1.redbubble.net/image.579678625.6248/papergc,500x,w,f8f8f8-pad,750x1000,f8f8f8.u7.jpg';\n  return (\n    <List>\n      {currentList.map(item => (\n        <StyledLink\n          to={`/movies/${item.id}`}\n          key={item.id}\n          state={{ from: location }}\n        >\n          <MovieItem>\n            <Poster\n              src={\n                item.poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${item.poster_path}`\n                  : defaultPoster\n              }\n              alt={item.currentListtitle}\n            />\n            <MovieTitle>{item.title}</MovieTitle>\n          </MovieItem>\n        </StyledLink>\n      ))}\n    </List>\n  );\n};\nexport default MovieList;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 30px;\n  flex-wrap: wrap;\n  margin-bottom: 40px;\n  list-style: none;\n`;\n\nexport const MovieItem = styled.li`\n  width: 300px;\n  height: 500px;\n  object-fit: cover;\n  box-shadow: 0px 1px 2px 0px rgba(0, 255, 255, 0.7),\n    1px 2px 4px 0px rgba(0, 255, 255, 0.7),\n    2px 4px 8px 0px rgba(0, 255, 255, 0.7),\n    2px 4px 16px 0px rgba(0, 255, 255, 0.7);\n`;\n\nexport const MovieTitle = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: bottom;\n  flex-wrap: wrap;\n  color: rgba(0, 255, 255, 0.7);\n  font-size: 20px;\n  text-decoration: none;\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n  height: 400px;\n  object-fit: cover;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst params = new URLSearchParams({\n  api_key: '6bcb4df6f6ccae49c8637c73c0f829b9',\n  language: 'en-US',\n});\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?${params}`);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?${params}`);\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits?${params}`);\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews?${params}`);\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(`/search/movie?query=${query}&${params}`);\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 30px;\n  margin-top: 30px;\n`;\nexport const Button = styled.button`\n  width: 100px;\n  height: 50px;\n  border: 1px solid black;\n  box-shadow: 0px 1px 2px 0px rgba(0, 255, 255, 0.7),\n    1px 2px 4px 0px rgba(0, 255, 255, 0.7),\n    2px 4px 8px 0px rgba(0, 255, 255, 0.7),\n    2px 4px 16px 0px rgba(0, 255, 255, 0.7);\n  background-color: black;\n  border-radius: 6px;\n  font-size: 18px;\n  color: rgba(0, 255, 255, 0.7);\n`;\nexport const Input = styled.input`\n  display: inline-block;\n  width: 300px;\n  height: 50px;\n  border: none;\n  background-color: black;\n  border-radius: 6px;\n  box-shadow: 0px 1px 2px 0px rgba(0, 255, 255, 0.7),\n    1px 2px 4px 0px rgba(0, 255, 255, 0.7),\n    2px 4px 8px 0px rgba(0, 255, 255, 0.7),\n    2px 4px 16px 0px rgba(0, 255, 255, 0.7);\n  padding-left: 4px;\n  padding-right: 4px;\n  margin-left: 20px;\n  font-size: 18px;\n  color: rgba(0, 255, 255, 0.7);\n`;\n","import { Form, Input, Button } from './SearchForm.styled';\n\nexport const SearchForm = ({ handleSubmit, handleChange }) => {\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input type=\"text\" onChange={handleChange} />\n      <Button>Search</Button>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n","import { TextInfo } from 'components/Layout';\n\nexport const NotFoundMovies = () => {\n  return (\n    <div>\n      <TextInfo>\n        No results were found for your request. Try entering a different search\n        value.\n      </TextInfo>\n    </div>\n  );\n};\nexport default NotFoundMovies;\n","import { MovieList } from 'components/MovieList/MovieList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { fetchSearchMovies } from 'components/api';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport NotFoundMovies from 'components/NotFound/NotFoundMovies';\n\nexport default function MoviesPage() {\n  const [currentValue, setCurrentValue] = useState('');\n  const [foundMovies, setFoundhMovies] = useState([]);\n  const [params, setParams] = useSearchParams();\n  const [notFound, setNotFound] = useState(false);\n\n  useEffect(() => {\n    const value = params.get('query') ?? '';\n\n    async function getSearchMovies() {\n      if (value === '') {\n        return;\n      }\n      try {\n        setFoundhMovies(await fetchSearchMovies(value));\n        setNotFound(true);\n      } catch (error) {\n        Notiflix.Notify.failure('No results were found for your request');\n        console.log(error);\n      }\n    }\n    getSearchMovies();\n  }, [params]);\n\n  const handleChange = evt => {\n    setCurrentValue(evt.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    setParams({ query: currentValue });\n    console.log(foundMovies.length);\n\n    if (currentValue === '') {\n      Notiflix.Notify.failure('Fill in the search field');\n      return;\n    }\n  };\n\n  return (\n    <div>\n      <SearchForm handleSubmit={handleSubmit} handleChange={handleChange} />\n      {foundMovies.length > 0 && <MovieList currentList={foundMovies} />}\n      {foundMovies.length === 0 && notFound && <NotFoundMovies />}\n    </div>\n  );\n}\n"],"names":["MovieList","_ref","currentList","location","useLocation","_jsx","List","children","map","item","StyledLink","to","concat","id","state","from","_jsxs","MovieItem","Poster","src","poster_path","alt","currentListtitle","MovieTitle","title","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","Link","_templateObject5","axios","params","URLSearchParams","api_key","language","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchMovieById","_ref2","_callee2","movieId","_context2","_x","fetchCast","_ref3","_callee3","_context3","cast","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","fetchSearchMovies","_ref5","_callee5","query","_context5","_x4","Form","Button","Input","SearchForm","handleSubmit","handleChange","onSubmit","type","onChange","TextInfo","MoviesPage","_useState","useState","_useState2","_slicedToArray","currentValue","setCurrentValue","_useState3","_useState4","foundMovies","setFoundhMovies","_useSearchParams","useSearchParams","_useSearchParams2","setParams","_useState5","_useState6","notFound","setNotFound","useEffect","_params$get","value","get","_getSearchMovies","t0","t1","t2","Notiflix","console","log","getSearchMovies","evt","preventDefault","length","target","NotFoundMovies"],"sourceRoot":""}