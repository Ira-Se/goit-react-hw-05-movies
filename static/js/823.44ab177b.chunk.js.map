{"version":3,"file":"static/js/823.44ab177b.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/api.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.js","pages/MovieDetailsPage/MovieDetailsPage.styled.js","components/Loader/Loader.js","pages/MovieDetailsPage/MovieDetailsPage.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 30px;\n  flex-wrap: wrap;\n  margin-bottom: 40px;\n  list-style: none;\n`;\n\nexport const MovieItem = styled.li`\n  width: 300px;\n  height: 500px;\n  object-fit: cover;\n  box-shadow: 0px 1px 2px 0px rgba(0, 255, 255, 0.7),\n    1px 2px 4px 0px rgba(0, 255, 255, 0.7),\n    2px 4px 8px 0px rgba(0, 255, 255, 0.7),\n    2px 4px 16px 0px rgba(0, 255, 255, 0.7);\n`;\n\nexport const MovieTitle = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: bottom;\n  flex-wrap: wrap;\n  color: rgba(0, 255, 255, 0.7);\n  font-size: 20px;\n  text-decoration: none;\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n  height: 400px;\n  object-fit: cover;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst params = new URLSearchParams({\n  api_key: '6bcb4df6f6ccae49c8637c73c0f829b9',\n  language: 'en-US',\n});\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?${params}`);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?${params}`);\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits?${params}`);\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews?${params}`);\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(`/search/movie?query=${query}&${params}`);\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  color: white;\n`;\nexport const Details = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 10px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 30px;\n  box-shadow: 0px 1px 2px 0px rgba(0, 255, 255, 0.7),\n    1px 2px 4px 0px rgba(0, 255, 255, 0.7),\n    2px 4px 8px 0px rgba(0, 255, 255, 0.7),\n    2px 4px 16px 0px rgba(0, 255, 255, 0.7);\n`;\n\nexport const Title = styled.div`\n  font-size: 30px;\n  color: rgba(0, 255, 255, 0.7);\n`;\n\nexport const TextItem = styled.span`\n  font-size: 20px;\n  color: rgba(0, 255, 255, 0.7);\n  margin-right: 10px;\n`;\n","import { Poster } from 'components/MovieList/MovieList.styled';\nimport {\n  Container,\n  Details,\n  MovieInfo,\n  TextItem,\n  Title,\n} from './MovieDetails.styled';\n\nexport const MovieDetails = ({ details }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    details;\n\n  const year = release_date && release_date.slice(0, 4);\n  const userScore = Math.round(vote_average * 10);\n  const movieGenres = genres && genres.map(genre => genre.name).join(', ');\n  return (\n    <Container>\n      <MovieInfo>\n        <Poster\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : null\n          }\n          alt={title}\n          width=\"200\"\n        />\n        <Details>\n          <Title>\n            {title} ({year})\n          </Title>\n\n          <div>\n            <TextItem>User score:</TextItem> {userScore}%\n          </div>\n          <div>\n            <TextItem> Overview:</TextItem>\n            {overview}\n          </div>\n          <div>\n            <TextItem> Genres:</TextItem>\n            {movieGenres}\n          </div>\n        </Details>\n      </MovieInfo>\n    </Container>\n  );\n};\nexport default MovieDetails;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n`;\nexport const SectionTitle = styled.div`\n  justify-content: center;\n  font-size: 30px;\n  color: rgba(0, 255, 255, 0.7);\n  margin-bottom: 40px;\n`;\n\nexport const AddInfo = styled.div`\n  padding: 20px;\n  box-shadow: 0px 1px 2px 0px rgba(0, 255, 255, 0.7),\n    1px 2px 4px 0px rgba(0, 255, 255, 0.7),\n    2px 4px 8px 0px rgba(0, 255, 255, 0.7),\n    2px 4px 16px 0px rgba(0, 255, 255, 0.7);\n`;\n\nexport const StyledLink = styled(Link)`\n  margin-top: 40px;\n  color: rgba(0, 255, 255, 0.7);\n`;\n","import { Watch } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return <Watch color=\"rgba(0, 255, 255, 0.7)\" />;\n};\n\nexport default Loader;\n","import { MovieDetails } from 'components/MovieDetails/MovieDetails';\nimport { fetchMovieById } from 'components/api';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  AddInfo,\n  CardContainer,\n  SectionTitle,\n  StyledLink,\n} from './MovieDetailsPage.styled';\n\nimport { StyledNavLink } from 'components/Layout';\nimport Notiflix from 'notiflix';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function MovieDetailsPage() {\n  const params = useParams();\n  const location = useLocation();\n\n  const [details, setDetails] = useState([]);\n\n  useEffect(() => {\n    if (!params.movieId) {\n      return;\n    }\n    async function getDetails() {\n      try {\n        setDetails(await fetchMovieById(params.movieId));\n      } catch (error) {\n        Notiflix.Notify.failure('Please reload the page');\n        console.log(error);\n      }\n    }\n    getDetails();\n  }, [params.movieId]);\n\n  const backLink = location.state?.from ?? '/';\n\n  return (\n    <CardContainer>\n      <StyledLink to={backLink}>Go back</StyledLink>\n      {details && <MovieDetails details={details} />}\n      <AddInfo>\n        <SectionTitle>Additional information</SectionTitle>\n        <StyledNavLink to=\"cast\" state={{ from: backLink }}>\n          Cast\n        </StyledNavLink>\n        <StyledNavLink to=\"reviews\" state={{ from: backLink }}>\n          Reviews\n        </StyledNavLink>\n        {/* <Outlet /> */}\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </AddInfo>\n    </CardContainer>\n  );\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","MovieTitle","_templateObject3","Poster","_templateObject4","StyledLink","Link","_templateObject5","axios","params","URLSearchParams","api_key","language","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","fetchMovieById","_ref2","_callee2","movieId","_context2","_x","fetchCast","_ref3","_callee3","_context3","cast","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","fetchSearchMovies","_ref5","_callee5","query","_context5","_x4","Container","Details","MovieInfo","Title","TextItem","MovieDetails","details","poster_path","title","release_date","vote_average","overview","genres","year","slice","userScore","Math","round","movieGenres","map","genre","name","join","_jsx","children","_jsxs","src","alt","width","CardContainer","SectionTitle","AddInfo","Loader","Watch","color","MovieDetailsPage","_location$state$from","_location$state","useParams","location","useLocation","_useState","useState","_useState2","_slicedToArray","setDetails","useEffect","_getDetails","t0","t1","t2","Notiflix","console","log","getDetails","backLink","state","from","to","StyledNavLink","Suspense","fallback","Outlet"],"sourceRoot":""}